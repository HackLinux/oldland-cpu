Oldland CPU
===========

Architecture
------------

7x32-bit GPR's.
1x32-bit stack pointer, addressable as R7.

1x32-bit status register:
  - Zero flag

Arithmetic/bitwise instructions:
  - ADD, SUB,
  - LSL, LSR, ORR, AND, XOR, BIC
  - Rd := Ra OP Rb or:
  - Rd := Ra OP #imm

Branch instructions
  - B #offs := PC += #offs
  - BEQ #offs := if Z: PC += #offs
  - BNE #offs := if Z: PC += #offs
  - BGT #offs := if !Z: PC += #offs
  - CALL #offs # Like branch, but pushes the return address.
  - RET # return from CALL

Load/Store instructions:
  - LDR Rd, Ra, #idx := Rd = M[Ra + idx]
    e.g. LDR R1, [R2, #0x20] means load the contents of M[R2 + 0x20] into R1
  - STR Ra, #idx, Rb := M[Ra + idx] = Rb
    - LDR16, LDR8, STR16, STR8 : 8 + 16 bit versions.
    e.g. STR R1, [R2, #0x20] means store the contents of R1 into M[R2 + 0x20]
  - MOVHI Rd, #imm: Rd[31:16] := imm

Example assembly:
  add		$r0, r0, #1
  ldr		$r1, dataval
  movhi		$r2, $hi(vtable)
  add		$r2, r2, $lo(vtable)
  call		0x100
  call		myfunc

dataval:
  .word		0xdeadbeef

myfunc:
  str8		$r2, [$r0, 0x0]
  str		$r1, [$r0, 0x4]
  ret

ENCODING
--------

For ALU operations, if R is set then rd := ra OP Rb else rd := ra OP I
For branch operations, if R is set then PC += Ra else PC += I
For load, if !P, Rd := M[Ra + I] else Rd := M[PC + I]
For store, if !p, M[Ra + I] := rb, else M[PC + I] := rb

Encoding:

	31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 09 08 07 06 05 04 03 02 01 00

ADD	 0  0  0  0  0  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
ADDC	 0  0  0  0  0  1  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
SUB	 0  0  0  0  1  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
SUBC	 0  0  0  0  1  1  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
LSL	 0  0  0  1  0  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
LSR	 0  0  0  1  0  1  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
AND	 0  0  0  1  1  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
XOR	 0  0  0  1  1  1  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
BIC	 0  0  1  0  0  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
OR 	 0  0  1  0  0  1  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  R rd rd rd ra ra ra rb rb rb
MOVHI	 0  0  1  0  1  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  x rd rd rd  x  x  x  x  x  x

CALL	 0  1  0  0  0  0  R  x  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I IR IR IR
RET	 0  1  0  0  0  1  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x  x
B	 0  1  0  1  0  0  R  x  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I IR IR IR
BNE	 0  1  0  1  0  1  R  x  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I IR IR IR
BEQ	 0  1  0  1  1  0  R  x  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I IR IR IR
BGT	 0  1  0  1  1  1  R  x  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I IR IR IR

LDR	 1  0  0  0  0  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  P rd rd rd ra ra ra  x  x  x
LDR16	 1  0  0  0  0  1  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  P rd rd rd ra ra ra  x  x  x
LDR8	 1  0  0  0  1  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  P rd rd rd ra ra ra  x  x  x

STR	 1  0  0  1  0  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  P  x  x  x ra ra ra rb rb rb
STR16	 1  0  0  1  0  1  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  P  x  x  x ra ra ra rb rb rb
STR8	 1  0  0  1  1  0  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  I  P  x  x  x ra ra ra rb rb rb

NOP is encoded as OR R0, R0

RELOCATIONS
-----------

R_OLDLAND_NONE:
  - NOP
R_OLDLAND_32:
  - 32-bit absolute relocation:
R_OLDLAND_PC24:
  - 24-bit PC-relative relocation for branches.
R_OLDLAND_PC16:
  - 16-bit PC-relative relocation for load/store.
R_OLDLAND_HI16:
  - 16-bit absolute relocation for MOVHI.
R_OLDLAND_LO16:
  - 16-bit absolute relocation for ADD/OR.
